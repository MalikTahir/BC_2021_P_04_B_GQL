type Author {
	Type: String
	id: String
	name: String
}

input AuthorInput {
	Type: String
	id: String
	name: String
}

type Book {
	Type: String
	id: String
	title: String
}

input BookInput {
	Type: String
	id: String
	title: String
}

type User {
	Type: String
	id: String
	name: String
    orders:[String]
}

input UserInput {
	Type: String
	id: String
	name: String
    orders:[String]
}

type Order {
    Type:String,
    id:String,
    userId:String,
    books:[String],
    total:Int,
    status:String
}

input OrderInput {
    Type:String,
    id:String,
    userId:String,
    books:[String],
    total:Int
    status:String
}

type Mutation {
	addBook(book: BookInput): Book
    deleteBook(id:String):String
    updateBook(book:BookInput):String
	addAuthor(author: AuthorInput): Author
    deleteAuthor(id:String):String
    updateAuthor(author:AuthorInput):String
	addUser(user: UserInput): User
    deleteUser(id:String):String
    updateUser(user:UserInput):String
    addOrder(order:OrderInput): Order
    deleteOrder(id:String):String
    updateOrder(order:OrderInput):String
    updateOrderStatus(id:String,status:String):String

}

type Query {
	getBook(id: String): Book
    getAllBooks:String
	getAuthor(id: String): Author
	getUser(id: String): User
    getOrder(id:String):Order
}